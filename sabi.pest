// Comments use {..} syntax with non-greedy matching
COMMENT = _{ "{" ~ (!"}" ~ ANY)* ~ "}" }

// The capsule for the program and the 
//  enum for its statements
program = { SOI ~ statement+ ~ EOI }
statement = _{
    feels |
    log |
    says
    }

// Makes a character or the MC feel something
feels = { character_identifier ~ "feels" ~ emotion_name ~ semicolon }

// Makes a character or the MC say something
says = { character_identifier ~ ": " ~ expr ~ semicolon }

// Writes a message to the console
log = { "log" ~ expr ~ semicolon }

// Expressions
expr = { term ~ (infix_op ~ term)* }
term = _{ 
    number | 
    string | 
    "(" ~ expr ~ ")" 
    }
infix_op = _{ "+" | "-" | "*" | "/" }

// General types
character_identifier = { 
    mc_identifier |
    character_name
    }
character_name = @{ ASCII_ALPHA_UPPER ~ ASCII_ALPHA_LOWER+ }
emotion_name = @{ ASCII_ALPHA+ }
mc_identifier = { "MC" } 

// Intrinsic types
number     = @{ "-"? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
string     = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
semicolon  = { ";" }